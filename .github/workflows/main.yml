name: Festify CI pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:

  compile:
    runs-on: ubuntu-latest
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Give execute permission to mvnw
        run: chmod +x mvnw
      - name: Compile project
        run: ./mvnw clean compile

  test:
    runs-on: ubuntu-latest
    name: Test app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Give execute permission to mvnw
        run: chmod +x mvnw
      - name: Run Tests
        run: ./mvnw clean test
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports

  build:
    runs-on: ubuntu-latest
    name: Build app
    needs: [compile, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Give execute permission to mvnw
        run: chmod +x mvnw
      - name: Build project
        run: ./mvnw clean package

  build-and-publish-docker-image:
    runs-on: ubuntu-latest
    name: Build docker image
    needs: [ build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Give execute permission to mvnw
        run: chmod +x mvnw
      - name: Build project
        run: ./mvnw clean package
      - name: Extract project version
        id: extract_version
        run: echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/festify:${{steps.extract_version.outputs.VERSION}}
            ${{ vars.DOCKERHUB_USERNAME }}/festify:latest
          build-args: |
            PROFILE:dev
            APP_VERSION:${{steps.extract_version.outputs.VERSION}}
          cache-from: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/festify:buildcache
          cache-to: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/festify:buildcache,mode=max
 